import os
import smtplib
import logging
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
from config import Config

logger = logging.getLogger(__name__)

def send_email(image_path, message, latitude, longitude):
    if not Config.EMAIL_USER or not Config.EMAIL_PASSWORD:
        logger.error("Email credentials not set, skipping email")
        return {"error": "Email credentials not configured"}
    
    sender_email = 'potholedetected@gmail.com'
    receiver_email = 'sneha.kt.19@gmail.com'
    subject = 'Pothole Detected - Citizen Report'
    
    body = f"""
    Pothole Detection Report
    ------------------------
    
    Location: Latitude {latitude}, Longitude {longitude}
    
    Citizen's Message:
    {message}
    
    This email was automatically generated by the Pothole Detection System.
    """

    msg = MIMEMultipart()
    msg['From'] = sender_email
    msg['To'] = receiver_email
    msg['Subject'] = subject

    msg.attach(MIMEText(body, 'plain'))

    if os.path.exists(image_path):
        with open(image_path, 'rb') as attachment:
            part = MIMEBase('application', 'octet-stream')
            part.set_payload(attachment.read())
            
            encoders.encode_base64(part)
            filename = os.path.basename(image_path)
            part.add_header('Content-Disposition', f'attachment; filename={filename}')
            msg.attach(part)

    try:
        server = smtplib.SMTP(Config.SMTP_SERVER, Config.SMTP_PORT)
        server.starttls()
        server.login(Config.EMAIL_USER, Config.EMAIL_PASSWORD)
        text = msg.as_string()
        server.sendmail(sender_email, receiver_email, text)
        server.quit()
        logger.info('Email sent successfully')
        return {"success": True, "message": "Email sent successfully"}
    except Exception as e:
        logger.error(f"Failed to send email: {e}")
        return {"error": f"Failed to send email: {str(e)}"}
